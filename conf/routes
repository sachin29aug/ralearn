# Visitor
GET     /signup                                             controllers.Visitor.signup()
POST    /signup/login                                       controllers.Visitor.signupLoginPost(request: Request)
GET     /login                                              controllers.Visitor.login(returnUrl: String ?= null)
POST    /login                                              controllers.Visitor.loginPost(request: Request)
GET     /logout                                             controllers.Visitor.logout(request: Request)

# My
GET     /                                                   controllers.Visitor.index
GET     /home                                               controllers.My.home(request: Request)
GET     /discover                                           controllers.My.discover(request: Request)
POST    /discover/:categoryId                               controllers.My.discoverPost(request: Request, categoryId: Long)
GET     /feedback                                           controllers.My.feedback()
POST    /feedback                                           controllers.My.feedbackPost(request: Request)
GET     /profile                                            controllers.My.profile(request: Request)

# My Book operations
POST    /shuffle/:userBookId                                controllers.My.shufflePost(request: Request, userBookId: Long)
POST    /favorite/:bookId                                   controllers.My.favoritePost(request: Request, bookId: Long)
GET     /list/:listName                                     controllers.My.list(request: Request, listName: String)
GET     /list/category/:id                                  controllers.My.categoryList(request: Request, id: Long)
GET     /book/:id                                           controllers.My.book(request: Request, id: Long)
POST    /book/user/rating/:bookId                           controllers.My.bookUserRatingPost(request: Request, bookId: Long)
POST    /book/search                                        controllers.My.bookSearch(request: Request)

# System Admin
GET     /import/books/gr/4agf9t                             controllers.SystemAdmin.importBooksGR
GET     /import/books/gb/4agf9t:count                       controllers.SystemAdmin.importBooksGB(count: Long)
GET     /import/books/ol/4agf9t/:count                      controllers.SystemAdmin.importBooksOL(count: Long)
GET     /import/authors/ol/4agf9t                           controllers.SystemAdmin.importAuthorsOL()
GET     /import/quotes/kaggle/4agf9t                        controllers.SystemAdmin.importQuotesKaggle
GET     /setup/categories/4agf9t                            controllers.SystemAdmin.setupCategories

# Legacy
GET     /legacy/:categoryId                                 controllers.Visitor.legacy(categoryId: Long)

# Static resources mapping
GET     /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)